{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\luisa\\\\OneDrive\\\\LuisAngel\\\\Code\\\\Memory Pegs\\\\memory-pegs-game\\\\pegs-game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _extends from \"C:\\\\Users\\\\luisa\\\\OneDrive\\\\LuisAngel\\\\Code\\\\Memory Pegs\\\\memory-pegs-game\\\\pegs-game\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\luisa\\\\OneDrive\\\\LuisAngel\\\\Code\\\\Memory Pegs\\\\memory-pegs-game\\\\pegs-game\\\\src\\\\components\\\\Options.js\";\nimport React, { useEffect, useState } from 'react';\nimport Option from './Option';\n\nconst Options = (_ref) => {\n  let props = _extends({}, _ref);\n\n  const optionsAmount = props.optionsAmount,\n        answer = props.answer,\n        sendAnswer = props.sendAnswer,\n        setNewOptions = props.setNewOptions;\n  let newOptions = props.newOptions;\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        options = _useState2[0],\n        setOptions = _useState2[1];\n\n  useEffect(() => {\n    setOptions(createOptions(optionsAmount));\n    setNewOptions(false);\n  }, [newOptions]);\n\n  const createOptions = optionsAmount => {\n    let options = [];\n    let randomNumber = Math.round(Math.random() * 110);\n\n    for (let i = 0; i < optionsAmount - 1; i++) {\n      do {\n        randomNumber = Math.round(Math.random() * 110);\n      } while (randomNumber === answer);\n\n      options.push(React.createElement(Option, {\n        id: randomNumber,\n        answer: randomNumber,\n        sendAnswer: sendAnswer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }));\n    }\n\n    options.push(React.createElement(Option, {\n      id: answer,\n      answer: answer,\n      sendAnswer: sendAnswer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    })); //shuffle options order\n\n    return options;\n  };\n\n  return React.createElement(React.Fragment, null, options);\n};\n\nexport default Options;","map":{"version":3,"sources":["C:/Users/luisa/OneDrive/LuisAngel/Code/Memory Pegs/memory-pegs-game/pegs-game/src/components/Options.js"],"names":["React","useEffect","useState","Option","Options","props","optionsAmount","answer","sendAnswer","setNewOptions","newOptions","options","setOptions","createOptions","randomNumber","Math","round","random","i","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,OAAO,GAAG,UAAgB;AAAA,MAAXC,KAAW;;AAAA,QACrBC,aADqB,GAC+BD,KAD/B,CACrBC,aADqB;AAAA,QACNC,MADM,GAC+BF,KAD/B,CACNE,MADM;AAAA,QACEC,UADF,GAC+BH,KAD/B,CACEG,UADF;AAAA,QACcC,aADd,GAC+BJ,KAD/B,CACcI,aADd;AAAA,MAEvBC,UAFuB,GAETL,KAFS,CAEvBK,UAFuB;;AAAA,oBAGER,QAAQ,CAAC,EAAD,CAHV;AAAA;AAAA,QAGrBS,OAHqB;AAAA,QAGZC,UAHY;;AAK5BX,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,UAAU,CAACC,aAAa,CAACP,aAAD,CAAd,CAAV;AACAG,IAAAA,aAAa,CAAC,KAAD,CAAb;AACH,GAHQ,EAGN,CAACC,UAAD,CAHM,CAAT;;AAKA,QAAMG,aAAa,GAAGP,aAAa,IAAI;AACnC,QAAIK,OAAO,GAAG,EAAd;AACA,QAAIG,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,GAAzB,CAAnB;;AACA,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACZ,aAAa,GAAC,CAA9B,EAAiCY,CAAC,EAAlC,EAAsC;AAClC,SAAG;AACCJ,QAAAA,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,GAAzB,CAAf;AACH,OAFD,QAESH,YAAY,KAAKP,MAF1B;;AAIAI,MAAAA,OAAO,CAACQ,IAAR,CAAa,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAEL,YAAZ;AAA0B,QAAA,MAAM,EAAEA,YAAlC;AAAgD,QAAA,UAAU,EAAEN,UAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAb;AACH;;AACDG,IAAAA,OAAO,CAACQ,IAAR,CAAa,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAEZ,MAAZ;AAAoB,MAAA,MAAM,EAAEA,MAA5B;AAAoC,MAAA,UAAU,EAAEC,UAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAb,EAVmC,CAWnC;;AACA,WAAOG,OAAP;AACH,GAbD;;AAcA,SACI,0CACKA,OADL,CADJ;AAKH,CA7BD;;AA+BA,eAAeP,OAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport Option from './Option'\r\n\r\nconst Options = ({...props}) => {\r\n    const {optionsAmount, answer, sendAnswer, setNewOptions} = props;\r\n    let {newOptions} = props;\r\n    const [options, setOptions] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setOptions(createOptions(optionsAmount));\r\n        setNewOptions(false);\r\n    }, [newOptions])\r\n\r\n    const createOptions = optionsAmount => {\r\n        let options = [];\r\n        let randomNumber = Math.round(Math.random()*110);\r\n        for (let i=0; i<optionsAmount-1; i++) {\r\n            do {\r\n                randomNumber = Math.round(Math.random()*110);\r\n            } while (randomNumber === answer)\r\n\r\n            options.push(<Option id={randomNumber} answer={randomNumber} sendAnswer={sendAnswer}/>)\r\n        }\r\n        options.push(<Option id={answer} answer={answer} sendAnswer={sendAnswer}/>)\r\n        //shuffle options order\r\n        return options\r\n    }\r\n    return (\r\n        <>\r\n            {options}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Options"]},"metadata":{},"sourceType":"module"}