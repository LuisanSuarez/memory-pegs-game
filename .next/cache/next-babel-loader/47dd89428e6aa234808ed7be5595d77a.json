{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\luisa\\\\OneDrive\\\\LuisAngel\\\\Code\\\\Memory Pegs\\\\memory-pegs-game\\\\components\\\\OptionEditable.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useReducer, useCallback } from 'react';\nimport ImageUpload from './ImageUpload';\nimport axios from 'axios';\nimport Dropzone from 'react-dropzone';\n\nvar OptionEditable = function OptionEditable(_ref) {\n  var props = _extends({}, _ref);\n\n  var placeholderImage = 'https://apod.nasa.gov/apod/image/2001/22466-22467anaVantuyne900.jpg';\n  var placeholderName = 'add a name to this peg';\n  var id = props.id; //TODO: useReducer?\n\n  var _useState = useState(placeholderImage),\n      image = _useState[0],\n      setImage = _useState[1];\n\n  var _useState2 = useState(placeholderName),\n      pegName = _useState2[0],\n      setPegName = _useState2[1]; //placeholder image\n\n\n  var pegNumberStr = id.toString();\n  pegNumberStr = id > 99 ? pegNumberStr.slice(1) : pegNumberStr;\n  useEffect(function () {\n    get({\n      \"peg\": pegNumberStr\n    });\n  }, []);\n  var url = 'http://localhost:8000/'; // #############\n  //CLOUDINARY UPLOAD\n  // #############\n\n  var cloudName = 'luisan';\n  var unsignedUploadPreset = 'jufwcv6o'; // var fileSelect = document.getElementById(\"fileSelect\"),\n  // fileElem = document.getElementById(\"fileElem\");\n  // urlSelect = document.getElementById(\"urlSelect\");\n  // fileSelect.addEventListener(\"click\", function(e) {\n  //     if (fileElem) {\n  //     fileElem.click();\n  // }\n  // e.preventDefault(); // prevent navigation to \"#\"\n  // }, false);\n  // const handleClick = (e) => {\n  //     if (fileElem) {\n  //         fileElem.click();\n  //     }\n  //     e.preventDefault();\n  // }\n  // urlSelect.addEventListener(\"click\", function(e) {\n  //     uploadFile('https://res.cloudinary.com/demo/image/upload/sample.jpg')\n  //     e.preventDefault(); // prevent navigation to \"#\"\n  // }, false);\n  // ************************ Drag and drop ***************** //\n  // function dragenter(e) {\n  //     e.stopPropagation();\n  //     e.preventDefault();\n  // }\n  // function dragover(e) {\n  //     e.stopPropagation();\n  //     e.preventDefault();\n  // }\n  // dropbox = document.getElementById(\"dropbox\");\n  // dropbox.addEventListener(\"dragenter\", dragenter, false);\n  // dropbox.addEventListener(\"dragover\", dragover, false);\n  // dropbox.addEventListener(\"drop\", drop, false);\n  // function drop(e) {\n  //     e.stopPropagation();\n  //     e.preventDefault();\n  //     var dt = e.dataTransfer;\n  //     var files = dt.files;\n  //     handleFiles(files);\n  // }\n  // *********** Upload file to Cloudinary ******************** //\n\n  function uploadFile(file) {\n    var url = \"https://api.cloudinary.com/v1_1/\".concat(cloudName, \"/upload\");\n    var xhr = new XMLHttpRequest();\n    var fd = new FormData();\n    xhr.open('POST', url, true);\n    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest'); // Reset the upload progress bar\n\n    document.getElementById('progress').style.width = 0; // Update progress (can be used to show progress indicator)\n\n    xhr.upload.addEventListener(\"progress\", function (e) {\n      var progress = Math.round(e.loaded * 100.0 / e.total);\n      document.getElementById('progress').style.width = progress + \"%\";\n      console.log(\"fileuploadprogress data.loaded: \".concat(e.loaded, \",\\n        data.total: \").concat(e.total));\n    });\n\n    xhr.onreadystatechange = function (e) {\n      if (xhr.readyState == 4 && xhr.status == 200) {\n        // File uploaded successfully\n        var response = JSON.parse(xhr.responseText); // https://res.cloudinary.com/cloudName/image/upload/v1483481128/public_id.jpg\n\n        var url = response.secure_url; // Create a thumbnail of the uploaded image, with 150px width\n\n        var tokens = url.split('/');\n        tokens.splice(-2, 0, 'w_150,c_scale');\n        var img = new Image(); // HTML5 Constructor\n\n        img.src = tokens.join('/');\n        img.alt = response.public_id;\n        document.getElementById('gallery').appendChild(img);\n      }\n    };\n\n    fd.append('upload_preset', unsignedUploadPreset);\n    fd.append('tags', 'browser_upload'); // Optional - add tag for image admin in Cloudinary\n\n    fd.append('file', file);\n    xhr.send(fd);\n    console.log('FILES HAVE BEEN SENT WITH PURE JAVASCRIPT');\n  } // *********** Handle selected files ******************** //\n\n\n  var handleFiles = function handleFiles(files) {\n    for (var i = 0; i < files.length; i++) {\n      uploadFile(files[i]); // call the function to upload the file\n    }\n  }; // #############\n  //CLOUDINARY UPLOAD END\n  // #############\n  //TODO: refactor as HOCs / 'container component pattern'\n  //TODO: use a container to handle the logic\n\n\n  var get = function get(data) {\n    axios.get(url + 'getImageUrl', {\n      params: data\n    }).then(function (res) {\n      setImage(res.data.data[0].imageURL ? res.data.data[0].imageURL : placeholderImage);\n      setPegName(res.data.data[0].pegName ? res.data.data[0].pegName : placeholderName);\n    })[\"catch\"](function (err) {// console.log(\"this is where it's at:\", err)\n    });\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    console.log(\"we'll post:\", pegName, \"for peg no.\", id);\n    var data = {\n      peg: id,\n      pegName: pegName\n    };\n    axios.put(url + 'updateData', data).then(function (res) {\n      console.log(\"put res:\", res);\n      get();\n      console.log('RAN GET');\n    })[\"catch\"](function (err) {\n      console.log(err);\n    });\n  };\n\n  var handleChange = function handleChange(e) {\n    console.log(e.target.value);\n    setPegName(e.target.value);\n  };\n\n  var uploadAcceptedFiles = function uploadAcceptedFiles(acceptedFiles) {\n    console.log(acceptedFiles);\n    console.log(\"we'll run some axios call here to our server our cloudinary\"); // cloudinary.v2.uploader.upload(acceptedFiles, \n    //     function(error, result) {console.log(result, error)}\n    // );\n\n    handleFiles(acceptedFiles);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    \"class\": \"option-card\",\n    onPointerDown: function onPointerDown() {\n      return \"\";\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, __jsx(\"form\", {\n    onSubmit: function onSubmit(e) {\n      e.preventDefault();\n      e.target.blur();\n    },\n    onBlur: function onBlur(e) {\n      return handleSubmit(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"text\",\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    name: \"pegName\",\n    value: pegName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  })), __jsx(\"img\", {\n    src: image,\n    style: {\n      height: '100px',\n      width: '100px',\n      border: '2px solid black',\n      background: 'lightgray'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }), __jsx(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, pegNumberStr), __jsx(Dropzone, {\n    onDrop: function onDrop(acceptedFiles) {\n      return uploadAcceptedFiles(acceptedFiles);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, function (_ref2) {\n    var getRootProps = _ref2.getRootProps,\n        getInputProps = _ref2.getInputProps;\n    return __jsx(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, __jsx(\"div\", _extends({}, getRootProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), __jsx(\"input\", _extends({}, getInputProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    })), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"Drag 'n' drop some files here, or click to select files\")));\n  })));\n};\n\nexport default OptionEditable;","map":{"version":3,"sources":["C:/Users/luisa/OneDrive/LuisAngel/Code/Memory Pegs/memory-pegs-game/components/OptionEditable.js"],"names":["React","useState","useEffect","useReducer","useCallback","ImageUpload","axios","Dropzone","OptionEditable","props","placeholderImage","placeholderName","id","image","setImage","pegName","setPegName","pegNumberStr","toString","slice","get","url","cloudName","unsignedUploadPreset","uploadFile","file","xhr","XMLHttpRequest","fd","FormData","open","setRequestHeader","document","getElementById","style","width","upload","addEventListener","e","progress","Math","round","loaded","total","console","log","onreadystatechange","readyState","status","response","JSON","parse","responseText","secure_url","tokens","split","splice","img","Image","src","join","alt","public_id","appendChild","append","send","handleFiles","files","i","length","data","params","then","res","imageURL","err","handleSubmit","preventDefault","peg","put","handleChange","target","value","uploadAcceptedFiles","acceptedFiles","blur","height","border","background","getRootProps","getInputProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer, useCallback } from 'react';\r\nimport ImageUpload from './ImageUpload';\r\nimport axios from 'axios';\r\nimport Dropzone from 'react-dropzone';\r\n\r\n\r\nconst OptionEditable = ({...props}) => {\r\n    const placeholderImage = 'https://apod.nasa.gov/apod/image/2001/22466-22467anaVantuyne900.jpg'\r\n    const placeholderName = 'add a name to this peg';\r\n    const { id } = props;\r\n    //TODO: useReducer?\r\n    const [image, setImage] = useState(placeholderImage)\r\n    const [pegName, setPegName] = useState(placeholderName);\r\n    //placeholder image\r\n    let pegNumberStr = id.toString();\r\n\r\n    pegNumberStr = id>99 ? pegNumberStr.slice(1) : pegNumberStr;\r\n\r\n    useEffect(() => {\r\n        get({ \"peg\": pegNumberStr })\r\n    }, [])\r\n\r\n    const url = 'http://localhost:8000/';\r\n\r\n    // #############\r\n    //CLOUDINARY UPLOAD\r\n    // #############\r\n    const cloudName = 'luisan';\r\n    const unsignedUploadPreset = 'jufwcv6o';\r\n    \r\n    // var fileSelect = document.getElementById(\"fileSelect\"),\r\n    // fileElem = document.getElementById(\"fileElem\");\r\n    // urlSelect = document.getElementById(\"urlSelect\");\r\n    \r\n    // fileSelect.addEventListener(\"click\", function(e) {\r\n    //     if (fileElem) {\r\n    //     fileElem.click();\r\n    // }\r\n    // e.preventDefault(); // prevent navigation to \"#\"\r\n    // }, false);\r\n    // const handleClick = (e) => {\r\n    //     if (fileElem) {\r\n    //         fileElem.click();\r\n    //     }\r\n    //     e.preventDefault();\r\n    // }\r\n\r\n// urlSelect.addEventListener(\"click\", function(e) {\r\n//     uploadFile('https://res.cloudinary.com/demo/image/upload/sample.jpg')\r\n//     e.preventDefault(); // prevent navigation to \"#\"\r\n// }, false);\r\n\r\n\r\n// ************************ Drag and drop ***************** //\r\n// function dragenter(e) {\r\n//     e.stopPropagation();\r\n//     e.preventDefault();\r\n// }\r\n\r\n// function dragover(e) {\r\n//     e.stopPropagation();\r\n//     e.preventDefault();\r\n// }\r\n\r\n// dropbox = document.getElementById(\"dropbox\");\r\n// dropbox.addEventListener(\"dragenter\", dragenter, false);\r\n// dropbox.addEventListener(\"dragover\", dragover, false);\r\n// dropbox.addEventListener(\"drop\", drop, false);\r\n\r\n// function drop(e) {\r\n//     e.stopPropagation();\r\n//     e.preventDefault();\r\n    \r\n//     var dt = e.dataTransfer;\r\n//     var files = dt.files;\r\n    \r\n//     handleFiles(files);\r\n// }\r\n\r\n// *********** Upload file to Cloudinary ******************** //\r\nfunction uploadFile(file) {\r\n    var url = `https://api.cloudinary.com/v1_1/${cloudName}/upload`;\r\n    var xhr = new XMLHttpRequest();\r\n    var fd = new FormData();\r\n    xhr.open('POST', url, true);\r\n    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n    \r\n    // Reset the upload progress bar\r\n    document.getElementById('progress').style.width = 0;\r\n    \r\n    // Update progress (can be used to show progress indicator)\r\n    xhr.upload.addEventListener(\"progress\", function(e) {\r\n        var progress = Math.round((e.loaded * 100.0) / e.total);\r\n        document.getElementById('progress').style.width = progress + \"%\";\r\n        \r\n        console.log(`fileuploadprogress data.loaded: ${e.loaded},\r\n        data.total: ${e.total}`);\r\n    });\r\n    \r\n    xhr.onreadystatechange = function(e) {\r\n        if (xhr.readyState == 4 && xhr.status == 200) {\r\n            // File uploaded successfully\r\n            var response = JSON.parse(xhr.responseText);\r\n            // https://res.cloudinary.com/cloudName/image/upload/v1483481128/public_id.jpg\r\n            var url = response.secure_url;\r\n            // Create a thumbnail of the uploaded image, with 150px width\r\n            var tokens = url.split('/');\r\n            tokens.splice(-2, 0, 'w_150,c_scale');\r\n            var img = new Image(); // HTML5 Constructor\r\n            img.src = tokens.join('/');\r\n            img.alt = response.public_id;\r\n            document.getElementById('gallery').appendChild(img);\r\n        }\r\n    };\r\n    \r\n    fd.append('upload_preset', unsignedUploadPreset);\r\n    fd.append('tags', 'browser_upload'); // Optional - add tag for image admin in Cloudinary\r\n    fd.append('file', file);\r\n    xhr.send(fd);\r\n    console.log('FILES HAVE BEEN SENT WITH PURE JAVASCRIPT');\r\n}\r\n\r\n// *********** Handle selected files ******************** //\r\nvar handleFiles = function(files) {\r\n    for (var i = 0; i < files.length; i++) {\r\n        uploadFile(files[i]); // call the function to upload the file\r\n    }\r\n};\r\n// #############\r\n//CLOUDINARY UPLOAD END\r\n// #############\r\n\r\n\r\n//TODO: refactor as HOCs / 'container component pattern'\r\n//TODO: use a container to handle the logic\r\nconst get = (data) => {\r\n    axios\r\n    .get(url+'getImageUrl', {\r\n        params: data\r\n    })\r\n    .then(res => {\r\n        setImage(res.data.data[0].imageURL ? res.data.data[0].imageURL : placeholderImage)\r\n                setPegName(res.data.data[0].pegName ? res.data.data[0].pegName : placeholderName)\r\n            })\r\n            .catch(err => {\r\n                // console.log(\"this is where it's at:\", err)\r\n            })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        console.log(\"we'll post:\", pegName, \"for peg no.\", id);\r\n        const data = {\r\n            peg: id,\r\n            pegName: pegName,\r\n        }\r\n        axios\r\n            .put(url + 'updateData', data)\r\n            .then(res => {\r\n                console.log(\"put res:\", res);\r\n                get()\r\n                console.log('RAN GET');\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        console.log(e.target.value);\r\n        setPegName(e.target.value)\r\n    }\r\n\r\n    const uploadAcceptedFiles = (acceptedFiles) => {\r\n        console.log(acceptedFiles)\r\n        console.log(\"we'll run some axios call here to our server our cloudinary\");\r\n        // cloudinary.v2.uploader.upload(acceptedFiles, \r\n        //     function(error, result) {console.log(result, error)}\r\n        // );\r\n        handleFiles(acceptedFiles)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div class=\"option-card\" onPointerDown={() => \"\" }>\r\n                    <form\r\n                        onSubmit={e => { e.preventDefault(); e.target.blur(); }} \r\n                        onBlur={e => handleSubmit(e)}>\r\n                        <input\r\n                            type='text'\r\n                            onChange={(e) => handleChange(e)}\r\n                            name='pegName'\r\n                            value={pegName}\r\n                            />\r\n                    </form>\r\n                <img src={image} style={{height: '100px', width: '100px', border: '2px solid black', background: 'lightgray'}} />\r\n                <h4>{pegNumberStr}</h4>\r\n                <Dropzone onDrop={acceptedFiles => uploadAcceptedFiles(acceptedFiles)}>\r\n                    {({getRootProps, getInputProps}) => (\r\n                        <section>\r\n                        <div {...getRootProps()}>\r\n                            <input {...getInputProps()} />\r\n                            <p>Drag 'n' drop some files here, or click to select files</p>\r\n                        </div>\r\n                        </section>\r\n                    )}\r\n                </Dropzone>\r\n                {/* <ImageUpload peg={id} update={get} pegName={pegName} /> */}\r\n            </div>\r\n        </>\r\n        )\r\n}\r\n\r\nexport default OptionEditable"]},"metadata":{},"sourceType":"module"}