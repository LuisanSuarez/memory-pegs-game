{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\luisa\\\\OneDrive\\\\LuisAngel\\\\Code\\\\Memory Pegs\\\\memory-pegs-game\\\\components\\\\OptionEditable.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useReducer } from 'react';\nimport ImageUpload from './ImageUpload';\nimport axios from 'axios';\n\nvar OptionEditable = function OptionEditable(_ref) {\n  var props = _extends({}, _ref);\n\n  var placeholderImage = 'https://apod.nasa.gov/apod/image/2001/22466-22467anaVantuyne900.jpg';\n  var placeholderName = 'add a name to this peg';\n  var id = props.id;\n\n  var _useReducer = useReducer(placeholderImage),\n      image = _useReducer[0],\n      setImage = _useReducer[1];\n\n  var _useState = useState(placeholderName),\n      pegName = _useState[0],\n      setPegName = _useState[1]; //placeholder image\n\n\n  var pegNumberStr = id.toString();\n  pegNumberStr = id > 99 ? pegNumberStr.slice(1) : pegNumberStr;\n  useEffect(function () {\n    get({\n      \"peg\": pegNumberStr\n    });\n  }, []);\n  var url = 'http://localhost:8000/'; //TODO: refactor as HOCs / 'container component pattern'\n  //TODO: use a container to handle the logic\n\n  var get = function get(data) {\n    axios.get(url + 'getImageUrl', {\n      params: data\n    }).then(function (res) {\n      setImage(res.data.data[0].imageURL ? res.data.data[0].imageURL : placeholderImage);\n      setPegName(res.data.data[0].pegName ? res.data.data[0].pegName : placeholderName);\n    })[\"catch\"](function (err) {// console.log(\"this is where it's at:\", err)\n    });\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    console.log(\"we'll post:\", pegName, \"for peg no.\", id);\n    var data = {\n      peg: id,\n      pegName: pegName\n    };\n    axios.put(url + 'updateData', data).then(function (res) {\n      console.log(\"put res:\", res);\n      get();\n      console.log('RAN GET');\n    })[\"catch\"](function (err) {\n      console.log(err);\n    });\n  };\n\n  var handleChange = function handleChange(e) {\n    console.log(e.target.value);\n    setPegName(e.target.value);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    \"class\": \"option-card\",\n    onPointerDown: function onPointerDown() {\n      return \"\";\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(\"form\", {\n    onSubmit: function onSubmit(e) {\n      e.preventDefault();\n      e.target.blur();\n    },\n    onBlur: function onBlur(e) {\n      return handleSubmit(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"text\",\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    name: \"pegName\",\n    value: pegName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })), __jsx(\"img\", {\n    src: image,\n    style: {\n      height: '100px',\n      width: '100px',\n      border: '2px solid black',\n      background: 'lightgray'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), __jsx(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, pegNumberStr), __jsx(ImageUpload, {\n    peg: id,\n    update: get,\n    pegName: pegName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })));\n};\n\nexport default OptionEditable;","map":{"version":3,"sources":["C:/Users/luisa/OneDrive/LuisAngel/Code/Memory Pegs/memory-pegs-game/components/OptionEditable.js"],"names":["React","useState","useEffect","useReducer","ImageUpload","axios","OptionEditable","props","placeholderImage","placeholderName","id","image","setImage","pegName","setPegName","pegNumberStr","toString","slice","get","url","data","params","then","res","imageURL","err","handleSubmit","e","preventDefault","console","log","peg","put","handleChange","target","value","blur","height","width","border","background"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer } from 'react';\r\nimport ImageUpload from './ImageUpload';\r\nimport axios from 'axios';\r\n\r\n\r\nconst OptionEditable = ({...props}) => {\r\n    const placeholderImage = 'https://apod.nasa.gov/apod/image/2001/22466-22467anaVantuyne900.jpg'\r\n    const placeholderName = 'add a name to this peg';\r\n    const { id } = props;\r\n    const [image, setImage] = useReducer(placeholderImage)\r\n    const [pegName, setPegName] = useState(placeholderName);\r\n    //placeholder image\r\n    let pegNumberStr = id.toString();\r\n\r\n    pegNumberStr = id>99 ? pegNumberStr.slice(1) : pegNumberStr;\r\n\r\n    useEffect(() => {\r\n        get({ \"peg\": pegNumberStr })\r\n    }, [])\r\n\r\n    const url = 'http://localhost:8000/';\r\n\r\n    //TODO: refactor as HOCs / 'container component pattern'\r\n    //TODO: use a container to handle the logic\r\n    const get = (data) => {\r\n        axios\r\n            .get(url+'getImageUrl', {\r\n                params: data\r\n            })\r\n            .then(res => {\r\n                setImage(res.data.data[0].imageURL ? res.data.data[0].imageURL : placeholderImage)\r\n                setPegName(res.data.data[0].pegName ? res.data.data[0].pegName : placeholderName)\r\n            })\r\n            .catch(err => {\r\n                // console.log(\"this is where it's at:\", err)\r\n            })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        console.log(\"we'll post:\", pegName, \"for peg no.\", id);\r\n        const data = {\r\n            peg: id,\r\n            pegName: pegName,\r\n        }\r\n        axios\r\n            .put(url + 'updateData', data)\r\n            .then(res => {\r\n                console.log(\"put res:\", res);\r\n                get()\r\n                console.log('RAN GET');\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        console.log(e.target.value);\r\n        setPegName(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div class=\"option-card\" onPointerDown={() => \"\" }>\r\n                    <form\r\n                        onSubmit={e => { e.preventDefault(); e.target.blur(); }} \r\n                        onBlur={e => handleSubmit(e)}>\r\n                        <input\r\n                            type='text'\r\n                            onChange={(e) => handleChange(e)}\r\n                            name='pegName'\r\n                            value={pegName}\r\n                            />\r\n                    </form>\r\n                <img src={image} style={{height: '100px', width: '100px', border: '2px solid black', background: 'lightgray'}} />\r\n                <h4>{pegNumberStr}</h4>\r\n                <ImageUpload peg={id} update={get} pegName={pegName} />\r\n            </div>\r\n        </>\r\n        )\r\n}\r\n\r\nexport default OptionEditable"]},"metadata":{},"sourceType":"module"}