{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nvar _jsxFileName = \"C:\\\\Users\\\\luisa\\\\OneDrive\\\\LuisAngel\\\\Code\\\\Memory Pegs\\\\memory-pegs-game\\\\components\\\\OptionEditable.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useReducer } from 'react';\nimport ImageUpload from './ImageUpload';\nimport axios from 'axios';\n\nconst OptionEditable = (_ref) => {\n  let props = _Object$assign({}, _ref);\n\n  const placeholderImage = 'https://apod.nasa.gov/apod/image/2001/22466-22467anaVantuyne900.jpg';\n  const placeholderName = 'add a name to this peg';\n  const {\n    id\n  } = props;\n  const {\n    0: image,\n    1: setImage\n  } = useReducer(placeholderImage);\n  const {\n    0: pegName,\n    1: setPegName\n  } = useState(placeholderName); //placeholder image\n\n  let pegNumberStr = id.toString();\n  pegNumberStr = id > 99 ? pegNumberStr.slice(1) : pegNumberStr;\n  useEffect(() => {\n    get({\n      \"peg\": pegNumberStr\n    });\n  }, []);\n  const url = 'http://localhost:8000/'; //TODO: refactor as HOCs / 'container component pattern'\n  //TODO: use a container to handle the logic\n\n  const get = data => {\n    axios.get(url + 'getImageUrl', {\n      params: data\n    }).then(res => {\n      setImage(res.data.data[0].imageURL ? res.data.data[0].imageURL : placeholderImage);\n      setPegName(res.data.data[0].pegName ? res.data.data[0].pegName : placeholderName);\n    }).catch(err => {// console.log(\"this is where it's at:\", err)\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(\"we'll post:\", pegName, \"for peg no.\", id);\n    const data = {\n      peg: id,\n      pegName: pegName\n    };\n    axios.put(url + 'updateData', data).then(res => {\n      console.log(\"put res:\", res);\n      get();\n      console.log('RAN GET');\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleChange = e => {\n    console.log(e.target.value);\n    setPegName(e.target.value);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    class: \"option-card\",\n    onPointerDown: () => \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      e.target.blur();\n    },\n    onBlur: e => handleSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    type: \"text\",\n    onChange: e => handleChange(e),\n    name: \"pegName\",\n    value: pegName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })), __jsx(\"img\", {\n    src: image,\n    style: {\n      height: '100px',\n      width: '100px',\n      border: '2px solid black',\n      background: 'lightgray'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), __jsx(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, pegNumberStr), __jsx(\"form\", {\n    action: \"/file-upload\",\n    class: \"dropzone\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    class: \"fallback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    name: \"file\",\n    type: \"file\",\n    multiple: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), \"THIS IS DROPZONE\")), __jsx(ImageUpload, {\n    peg: id,\n    update: get,\n    pegName: pegName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })));\n};\n\nexport default OptionEditable;","map":{"version":3,"sources":["C:/Users/luisa/OneDrive/LuisAngel/Code/Memory Pegs/memory-pegs-game/components/OptionEditable.js"],"names":["React","useState","useEffect","useReducer","ImageUpload","axios","OptionEditable","props","placeholderImage","placeholderName","id","image","setImage","pegName","setPegName","pegNumberStr","toString","slice","get","url","data","params","then","res","imageURL","catch","err","handleSubmit","e","preventDefault","console","log","peg","put","handleChange","target","value","blur","height","width","border","background"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer } from 'react';\r\nimport ImageUpload from './ImageUpload';\r\nimport axios from 'axios';\r\n\r\n\r\nconst OptionEditable = ({...props}) => {\r\n    const placeholderImage = 'https://apod.nasa.gov/apod/image/2001/22466-22467anaVantuyne900.jpg'\r\n    const placeholderName = 'add a name to this peg';\r\n    const { id } = props;\r\n    const [image, setImage] = useReducer(placeholderImage)\r\n    const [pegName, setPegName] = useState(placeholderName);\r\n    //placeholder image\r\n    let pegNumberStr = id.toString();\r\n\r\n    pegNumberStr = id>99 ? pegNumberStr.slice(1) : pegNumberStr;\r\n\r\n    useEffect(() => {\r\n        get({ \"peg\": pegNumberStr })\r\n    }, [])\r\n\r\n    const url = 'http://localhost:8000/';\r\n\r\n    //TODO: refactor as HOCs / 'container component pattern'\r\n    //TODO: use a container to handle the logic\r\n    const get = (data) => {\r\n        axios\r\n            .get(url+'getImageUrl', {\r\n                params: data\r\n            })\r\n            .then(res => {\r\n                setImage(res.data.data[0].imageURL ? res.data.data[0].imageURL : placeholderImage)\r\n                setPegName(res.data.data[0].pegName ? res.data.data[0].pegName : placeholderName)\r\n            })\r\n            .catch(err => {\r\n                // console.log(\"this is where it's at:\", err)\r\n            })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        console.log(\"we'll post:\", pegName, \"for peg no.\", id);\r\n        const data = {\r\n            peg: id,\r\n            pegName: pegName,\r\n        }\r\n        axios\r\n            .put(url + 'updateData', data)\r\n            .then(res => {\r\n                console.log(\"put res:\", res);\r\n                get()\r\n                console.log('RAN GET');\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        console.log(e.target.value);\r\n        setPegName(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div class=\"option-card\" onPointerDown={() => \"\" }>\r\n                    <form\r\n                        onSubmit={e => { e.preventDefault(); e.target.blur(); }} \r\n                        onBlur={e => handleSubmit(e)}>\r\n                        <input\r\n                            type='text'\r\n                            onChange={(e) => handleChange(e)}\r\n                            name='pegName'\r\n                            value={pegName}\r\n                            />\r\n                    </form>\r\n                <img src={image} style={{height: '100px', width: '100px', border: '2px solid black', background: 'lightgray'}} />\r\n                <h4>{pegNumberStr}</h4>\r\n                <form action=\"/file-upload\" class=\"dropzone\">\r\n                    <div class=\"fallback\">\r\n                        <input name=\"file\" type=\"file\" multiple />\r\n                        THIS IS DROPZONE\r\n                    </div>\r\n                </form>\r\n                <ImageUpload peg={id} update={get} pegName={pegName} />\r\n            </div>\r\n        </>\r\n        )\r\n}\r\n\r\nexport default OptionEditable"]},"metadata":{},"sourceType":"module"}