{"ast":null,"code":"import * as firebase from \"firebase/app\";\nimport dotenv from 'dotenv';\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/analytics\";\nconsole.log(process.env.APIKEY);\nvar firebaseConfig = {\n  apiKey: process.env.APIKEY,\n  authDomain: process.env.AUTHDOMAIN,\n  databaseURL: process.env.DATABASEURL,\n  projectId: process.env.DATABASEURL,\n  storageBucket: process.env.STORAGEBUCKET,\n  messagingSenderId: process.env.MESSAGINGSENDERID,\n  appId: process.env.APPID,\n  measurementId: process.env.MEASUREMENTID\n};\n\ntry {\n  firebase.initializeApp({\n    firebaseConfig: firebaseConfig\n  });\n} catch (err) {\n  if (!/already exists/.test(err.message)) {\n    console.error(\"Firebase initialization error\", err.stack);\n  }\n} // !firebase.apps.length ? firebase.initializeApp(config) : firebase.app()\n// firebase.analytics();\n// firebase.initializeApp({firebaseConfig})\n\n\ndb = firebase.firestore();\nexport default db; //   export default !firebase.apps.length ? firebase.initializeApp(config) : firebase.app();","map":{"version":3,"sources":["C:/Users/luisa/OneDrive/LuisAngel/Code/Memory Pegs/memory-pegs-retry/firebase.js"],"names":["firebase","dotenv","console","log","process","env","APIKEY","firebaseConfig","apiKey","authDomain","AUTHDOMAIN","databaseURL","DATABASEURL","projectId","storageBucket","STORAGEBUCKET","messagingSenderId","MESSAGINGSENDERID","appId","APPID","measurementId","MEASUREMENTID","initializeApp","err","test","message","error","stack","db","firestore"],"mappings":"AAAA,OAAO,KAAKA,QAAZ,MAA0B,cAA1B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAO,eAAP;AACA,OAAO,oBAAP;AACA,OAAO,oBAAP;AAEAC,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,GAAR,CAAYC,MAAxB;AAEA,IAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAEJ,OAAO,CAACC,GAAR,CAAYC,MADD;AAEnBG,EAAAA,UAAU,EAAEL,OAAO,CAACC,GAAR,CAAYK,UAFL;AAGnBC,EAAAA,WAAW,EAAEP,OAAO,CAACC,GAAR,CAAYO,WAHN;AAInBC,EAAAA,SAAS,EAAET,OAAO,CAACC,GAAR,CAAYO,WAJJ;AAKnBE,EAAAA,aAAa,EAAEV,OAAO,CAACC,GAAR,CAAYU,aALR;AAMnBC,EAAAA,iBAAiB,EAAEZ,OAAO,CAACC,GAAR,CAAYY,iBANZ;AAOnBC,EAAAA,KAAK,EAAEd,OAAO,CAACC,GAAR,CAAYc,KAPA;AAQnBC,EAAAA,aAAa,EAAEhB,OAAO,CAACC,GAAR,CAAYgB;AARR,CAAvB;;AAWE,IAAI;AACFrB,EAAAA,QAAQ,CAACsB,aAAT,CAAuB;AACrBf,IAAAA,cAAc,EAAdA;AADqB,GAAvB;AAGD,CAJD,CAIE,OAAOgB,GAAP,EAAY;AACZ,MAAI,CAAC,iBAAiBC,IAAjB,CAAsBD,GAAG,CAACE,OAA1B,CAAL,EAAyC;AACvCvB,IAAAA,OAAO,CAACwB,KAAR,CAAc,+BAAd,EAA+CH,GAAG,CAACI,KAAnD;AACD;AACF,C,CAED;AACA;AACA;;;AACAC,EAAE,GAAG5B,QAAQ,CAAC6B,SAAT,EAAL;AAGA,eAAeD,EAAf,C,CACF","sourcesContent":["import * as firebase from \"firebase/app\";\r\nimport dotenv from 'dotenv';\r\n\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/analytics\";\r\n\r\nconsole.log(process.env.APIKEY)\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.APIKEY,\r\n    authDomain: process.env.AUTHDOMAIN,\r\n    databaseURL: process.env.DATABASEURL,\r\n    projectId: process.env.DATABASEURL,\r\n    storageBucket: process.env.STORAGEBUCKET,\r\n    messagingSenderId: process.env.MESSAGINGSENDERID,\r\n    appId: process.env.APPID,\r\n    measurementId: process.env.MEASUREMENTID,\r\n  };\r\n\r\n  try {\r\n    firebase.initializeApp({\r\n      firebaseConfig\r\n    });\r\n  } catch (err) {\r\n    if (!/already exists/.test(err.message)) {\r\n      console.error(\"Firebase initialization error\", err.stack);\r\n    }\r\n  }\r\n\r\n  // !firebase.apps.length ? firebase.initializeApp(config) : firebase.app()\r\n  // firebase.analytics();\r\n  // firebase.initializeApp({firebaseConfig})\r\n  db = firebase.firestore();\r\n\r\n\r\n  export default db;\r\n//   export default !firebase.apps.length ? firebase.initializeApp(config) : firebase.app();"]},"metadata":{},"sourceType":"module"}