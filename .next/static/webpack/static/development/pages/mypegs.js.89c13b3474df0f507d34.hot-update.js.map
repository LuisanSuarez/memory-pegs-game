{"version":3,"file":"static/webpack/static\\development\\pages\\mypegs.js.89c13b3474df0f507d34.hot-update.js","sources":["webpack:///./components/OptionEditable.js"],"sourcesContent":["import React, { useState, useEffect, useReducer } from 'react';\r\nimport ImageUpload from './ImageUpload';\r\nimport axios from 'axios';\r\n\r\n\r\nconst OptionEditable = ({...props}) => {\r\n    const placeholderImage = 'https://apod.nasa.gov/apod/image/2001/22466-22467anaVantuyne900.jpg'\r\n    const placeholderName = 'add a name to this peg';\r\n    const { id } = props;\r\n    const [image, setImage] = useReducer(placeholderImage)\r\n    const [pegName, setPegName] = useState(placeholderName);\r\n    //placeholder image\r\n    let pegNumberStr = id.toString();\r\n\r\n    pegNumberStr = id>99 ? pegNumberStr.slice(1) : pegNumberStr;\r\n\r\n    useEffect(() => {\r\n        get({ \"peg\": pegNumberStr })\r\n    }, [])\r\n\r\n    const url = 'http://localhost:8000/';\r\n\r\n    //TODO: refactor as HOCs / 'container component pattern'\r\n    //TODO: use a container to handle the logic\r\n    const get = (data) => {\r\n        axios\r\n            .get(url+'getImageUrl', {\r\n                params: data\r\n            })\r\n            .then(res => {\r\n                setImage(res.data.data[0].imageURL ? res.data.data[0].imageURL : placeholderImage)\r\n                setPegName(res.data.data[0].pegName ? res.data.data[0].pegName : placeholderName)\r\n            })\r\n            .catch(err => {\r\n                // console.log(\"this is where it's at:\", err)\r\n            })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        console.log(\"we'll post:\", pegName, \"for peg no.\", id);\r\n        const data = {\r\n            peg: id,\r\n            pegName: pegName,\r\n        }\r\n        axios\r\n            .put(url + 'updateData', data)\r\n            .then(res => {\r\n                console.log(\"put res:\", res);\r\n                get()\r\n                console.log('RAN GET');\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        console.log(e.target.value);\r\n        setPegName(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div class=\"option-card\" onPointerDown={() => \"\" }>\r\n                    <form\r\n                        onSubmit={e => { e.preventDefault(); e.target.blur(); }} \r\n                        onBlur={e => handleSubmit(e)}>\r\n                        <input\r\n                            type='text'\r\n                            onChange={(e) => handleChange(e)}\r\n                            name='pegName'\r\n                            value={pegName}\r\n                            />\r\n                    </form>\r\n                <img src={image} style={{height: '100px', width: '100px', border: '2px solid black', background: 'lightgray'}} />\r\n                <h4>{pegNumberStr}</h4>\r\n                <form action=\"/file-upload\" class=\"dropzone\">\r\n                    <div class=\"fallback\">\r\n                        <input name=\"file\" type=\"file\" multiple />\r\n                        THIS IS DROPZONE\r\n                    </div>\r\n                </form>\r\n                <ImageUpload peg={id} update={get} pegName={pegName} />\r\n            </div>\r\n        </>\r\n        )\r\n}\r\n\r\nexport default OptionEditable"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAFA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAKA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AAGA;AACA;AAAA;AACA;AAEA;AADA;AAIA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;A","sourceRoot":""}